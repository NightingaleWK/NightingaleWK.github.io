{
    "version": "https://jsonfeed.org/version/1",
    "title": "雪漫城的风宅 • All posts by \"laravel sail\" tag",
    "description": "この世界は好都合に未完成 だから知りたいんだ —— チ。-地球の運動について-",
    "home_page_url": "https://nightingalewk.cn",
    "items": [
        {
            "id": "https://nightingalewk.cn/2023/11/16/61.%20laravel%20%E9%A1%B9%E7%9B%AE%E6%89%A7%E8%A1%8C%20sail%20up%20%E6%8A%A5%2080%20%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98/",
            "url": "https://nightingalewk.cn/2023/11/16/61.%20laravel%20%E9%A1%B9%E7%9B%AE%E6%89%A7%E8%A1%8C%20sail%20up%20%E6%8A%A5%2080%20%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98/",
            "title": "laravel 项目执行 sail up 报 80 端口占用问题",
            "date_published": "2023-11-16T09:00:00.000Z",
            "content_html": "<p>今天给一台新机器装好 laravel sail 环境后，在最后一步启动项目时，报错如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wangkai@Precision-<span class=\"number\">7920</span>:~/code/daochenglin$ sail up -d</span><br><span class=\"line\">[+] Building <span class=\"number\">0.0</span>s (<span class=\"number\">0</span>/<span class=\"number\">0</span>)                                                                          docker:<span class=\"keyword\">default</span></span><br><span class=\"line\">[+] Running <span class=\"number\">8</span>/<span class=\"number\">8</span></span><br><span class=\"line\"> ✔ Network daochenglin_sail              Created                                                           <span class=\"number\">0.0</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-meilisearch-<span class=\"number\">1</span>   Started                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-selenium-<span class=\"number\">1</span>      Started                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-redis-<span class=\"number\">1</span>         Started                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-memcached-<span class=\"number\">1</span>     Started                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-mysql-<span class=\"number\">1</span>         Started                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-mailpit-<span class=\"number\">1</span>       Started                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"> ✔ Container daochenglin-laravel.test-<span class=\"number\">1</span>  Created                                                           <span class=\"number\">0.1</span>s</span><br><span class=\"line\"><span class=\"built_in\">Error</span> response <span class=\"keyword\">from</span> daemon: Ports are not available: exposing port TCP <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>:<span class=\"number\">80</span> -&gt; <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>:<span class=\"number\">0</span>: listen tcp <span class=\"number\">0.0</span>.<span class=\"number\">0.0</span>:<span class=\"number\">80</span>: bind: An attempt was made to access a socket in a way forbidden by its access permissions.</span><br></pre></td></tr></table></figure>\n\n<p>这个问题就是我们本机的 80 端口被占用了，我个人的电脑是 windows 11，系统服务默认开启一个叫 <code>World Wide Web 发布服务</code> 的服务，他是自动启动的，该服务通过 Internet Information Services 管理器提供 Web 连接和管理，默认占用 80 端口，这个服务我们很明显用不到，给他禁用掉，然后再 sail up 就 ok 了。</p>\n<p>一点小小的经验分享 😁</p>\n",
            "tags": [
                "laravel sail",
                "故障排除"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2023/05/09/56.%20%EF%BC%88%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89%E5%B0%86%20homestead%20%E4%B8%AD%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%BF%81%E7%A7%BB%E5%88%B0%20laravel%20sail%20%E4%B8%AD%E8%BF%9B%E8%A1%8C%E5%BC%80%E5%8F%91/",
            "url": "https://nightingalewk.cn/2023/05/09/56.%20%EF%BC%88%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89%E5%B0%86%20homestead%20%E4%B8%AD%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%BF%81%E7%A7%BB%E5%88%B0%20laravel%20sail%20%E4%B8%AD%E8%BF%9B%E8%A1%8C%E5%BC%80%E5%8F%91/",
            "title": "（更新中）将 homestead 中的项目迁移到 laravel sail 中进行开发",
            "date_published": "2023-05-09T01:43:00.000Z",
            "content_html": "<p>本文的目的是：将原本跑 homestead 环境下的 laravel 项目，迁移到官方最新推荐的 laravel sail 开发环境中。下面我分享一下我的操作方法。</p>\n<p>在文章开始之前，我们默认大家均已拥有一个 homestead 开发环境，且你也是在其之上本地开发多次的开发者，而且你的需求是将你的 homestead 开发环境转换成 laravel sail，希望借助 docker 技术来提升系统的</p>\n<h2 id=\"1-项目克隆\"><a href=\"#1-项目克隆\" class=\"headerlink\" title=\"1. 项目克隆\"></a>1. 项目克隆</h2><p>首先我们你将线上仓库的代码clone到本地</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:NightingaleWK/larabbs.git larabbs</span><br></pre></td></tr></table></figure>\n\n<p>然后我们启动 homestead ，并在 homestead 的 linux 环境中执行接下来的工作。</p>\n<p>我们先来到项目根目录复制一份 .env 文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp .env.example .env</span><br><span class=\"line\"></span><br><span class=\"line\">vim .env</span><br><span class=\"line\"></span><br><span class=\"line\">// 编辑一下 .env 文件并保存</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-项目改造\"><a href=\"#2-项目改造\" class=\"headerlink\" title=\"2. 项目改造\"></a>2. 项目改造</h2><p>然后在已运行的应用中安装 Composer 依赖，以下指令执行后，其余未安装的以来也将一并安装，毕竟我们没有执行过 composer i 嘛</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">composer require laravel/sail --dev</span><br></pre></td></tr></table></figure>\n\n<p>在 Sail 完成安装后，你可以运行 Artisan 命令 sail:install。这个命令将会发布 Sail 的 docker-compose.yml 文件到你应用程序的根目录：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan sail:install --with=mysql,redis</span><br></pre></td></tr></table></figure>\n\n<p>以上这一步的执行可能会花费很长时间，网上有很多修改相关配置的来提高速度，大家可以自己搜索，至于为什么我不用，那就是希望追求纯粹正统，composer 阿里云的源与官方源完全跟不上，composer u 执行完简直是反向升级，以后再也不相信国内的源了。</p>\n<p>然后我再说一下 with 后面的该怎么填写，你可以尝试执行不带 with 的命令，可以看到几个可选的选项，这些就是填写在 with 后面的内容，按需选择安装即可。</p>\n<p>上述步骤安装完毕会系统会提示 Sail build successful. 这就代表着这一阶段任务完成</p>\n<p>然后我们把项目推送到线上仓库</p>\n<h2 id=\"3-代码上传\"><a href=\"#3-代码上传\" class=\"headerlink\" title=\"3. 代码上传\"></a>3. 代码上传</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m &quot;ready for docker&quot;</span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-代码部署\"><a href=\"#4-代码部署\" class=\"headerlink\" title=\"4. 代码部署\"></a>4. 代码部署</h2><p>然后我们回到我们的sail环境中，把最新的项目代码从仓库拉下来</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:NightingaleWK/larabbs.git larabbs</span><br></pre></td></tr></table></figure>\n\n<p>之后我们也是重新配置 .env 文件</p>\n<p>然后我们执行 composer 命令，安装在 sail 环境下的依赖</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --rm \\</span><br><span class=\"line\">    -u &quot;$(id -u):$(id -g)&quot; \\</span><br><span class=\"line\">    -v &quot;$(pwd):/var/www/html&quot; \\</span><br><span class=\"line\">    -w /var/www/html \\</span><br><span class=\"line\">    laravelsail/php82-composer:latest \\</span><br><span class=\"line\">    composer install --ignore-platform-reqs</span><br></pre></td></tr></table></figure>\n<p>这里与在 homestead 中不同的是，我们 sail 环境不包括 composer 命令，这个命令使用一个包含 PHP 与 Composer 的小型 Docker 容器进行应用程序依赖的安装。</p>\n<p>当你使用 laravelsail&#x2F;phpXX-composer 镜像时，你应该选择和你的应用程序所用环境相同的 PHP 版本（74、80、81 或 82）。</p>\n<h2 id=\"5-环境运行\"><a href=\"#5-环境运行\" class=\"headerlink\" title=\"5. 环境运行\"></a>5. 环境运行</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sail up -d</span><br><span class=\"line\"></span><br><span class=\"line\">// -d 表示后台运行，去掉那就是前台运行，需要 ctrl + c 来结束。加入带着 -d，那么我们退出的话则需要输入 sail down 来结束</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "homestead",
                "laravel sail"
            ]
        },
        {
            "id": "https://nightingalewk.cn/2022/03/01/37.%20%EF%BC%88%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%20Laravel%20Sail%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/",
            "url": "https://nightingalewk.cn/2022/03/01/37.%20%EF%BC%88%E6%9B%B4%E6%96%B0%E4%B8%AD%EF%BC%89%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%20Laravel%20Sail%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/",
            "title": "（更新中）从零开始搭建 laravel Sail 开发环境",
            "date_published": "2022-03-01T09:00:00.000Z",
            "content_html": "<p>之前的 laravel 开发环境均为 windows + homestead，一直都用得挺好没问题，但由于 Windows 11 的稳定性越来越好，并且内置的 WSL 也更新到了第二代，再加上 laravel 官方也将推荐的统一开发环境换成了 laravel Sail，啥也不说了，本着终生学习的态度，是时候放弃虚机，拥抱 docker 了。</p>\n<p>通过几天的实际体验，给我最大的感受就是快，方方面面的快，环境启停迅速，配置也快，页面响应的也快，没别的，巴适的很。同时在 homestead 做的一切事情，在 docker 下也全能做到，完美</p>\n<p>在开始之前，我们需要检查如下几点是否已经做到</p>\n<ul>\n<li>Windows 10 or 11，并升级到系统最新版本</li>\n<li>受够虚机缓慢的相应和繁琐的配置</li>\n<li>热与学习新技术，不局限于当下</li>\n<li>爱折腾的心</li>\n</ul>\n<p>发稿时，我当前版本环境为</p>\n<ul>\n<li>windows 11 22H2</li>\n<li>docker 4.19.0</li>\n<li>laravel 10</li>\n</ul>\n<p>ok，让我们正式开始配置之旅吧，很简单</p>\n<h2 id=\"1-启用-wsl2\"><a href=\"#1-启用-wsl2\" class=\"headerlink\" title=\"1. 启用 wsl2\"></a>1. 启用 wsl2</h2><p>按 <code>Win + R</code> 。输入指令 <code>appwiz.cpl</code> 回车。</p>\n<p>在弹出窗的左侧点击 <code>启动或关闭 Windows 功能</code> ，在弹出窗内勾选 <code>适用于 Linux 的 Windows 子系统</code>、<code>Hyper-V</code> 和 <code>虚拟机平台</code> 。</p>\n<p>点击确定电脑会及自动安装，期间根据提示会有几次重启。</p>\n<p>重启完后，打开终端应用 <code>Windows Terminal</code> （以管理员方式运行），接下来我们需要设置 WSL 版本为 WSL2 ，并对系统进行更新</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --set-default-version 2</span><br><span class=\"line\">wsl --update</span><br></pre></td></tr></table></figure>\n<p>当然，关于更新这块，你也可以打开电脑设置中的 Windows更新，点击检查更新即可对 wsl 进行更新</p>\n<h2 id=\"2-安装-Ubuntu\"><a href=\"#2-安装-Ubuntu\" class=\"headerlink\" title=\"2. 安装 Ubuntu\"></a>2. 安装 Ubuntu</h2><p>当前我们的 Ubuntu TLS 版本为 22.04，我们在 Windows Terminal 中继续操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --list --online    // 列出所有可安装的 linux 版本</span><br><span class=\"line\">wsl --install -d Ubuntu-22.04    // 这行指令会安装 Ubuntu-22.04。该指令可能会提示网络错误，因为需要访问 ``https://raw.githubusercontent.com/microsoft/WSL/master/distributions/DistributionInfo.json`` 这个资源，请科学上网后重试该指令</span><br></pre></td></tr></table></figure>\n\n<p>系统安装完毕后会自动启动，进入 ubuntu 界面，等待初始化完毕后，需要设置一个 linux 账号，为了下文演示，我设置的账号密码为 <code>wangkai Admin@123</code></p>\n<p>完成后便可进入熟悉的命令行，关闭即可。以下是具体的执行效果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS C:\\Users\\djsyw&gt; wsl --list --online</span><br><span class=\"line\">以下是可安装的有效分发的列表。</span><br><span class=\"line\">使用 &#x27;wsl.exe --install &lt;Distro&gt;&#x27; 安装。</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                                   FRIENDLY NAME</span><br><span class=\"line\">Ubuntu                                 Ubuntu</span><br><span class=\"line\">Debian                                 Debian GNU/Linux</span><br><span class=\"line\">kali-linux                             Kali Linux Rolling</span><br><span class=\"line\">Ubuntu-18.04                           Ubuntu 18.04 LTS</span><br><span class=\"line\">Ubuntu-20.04                           Ubuntu 20.04 LTS</span><br><span class=\"line\">Ubuntu-22.04                           Ubuntu 22.04 LTS</span><br><span class=\"line\">OracleLinux_8_5                        Oracle Linux 8.5</span><br><span class=\"line\">OracleLinux_7_9                        Oracle Linux 7.9</span><br><span class=\"line\">SUSE-Linux-Enterprise-Server-15-SP4    SUSE Linux Enterprise Server 15 SP4</span><br><span class=\"line\">openSUSE-Leap-15.4                     openSUSE Leap 15.4</span><br><span class=\"line\">openSUSE-Tumbleweed                    openSUSE Tumbleweed</span><br><span class=\"line\"></span><br><span class=\"line\">PS C:\\Users\\djsyw&gt; wsl --install -d Ubuntu-22.04</span><br><span class=\"line\">正在安装: Ubuntu 22.04 LTS</span><br><span class=\"line\">已安装 Ubuntu 22.04 LTS。</span><br><span class=\"line\">正在启动 Ubuntu 22.04 LTS...</span><br><span class=\"line\">Installing, this may take a few minutes...</span><br><span class=\"line\">Please create a default UNIX user account. The username does not need to match your Windows username.</span><br><span class=\"line\">For more information visit: https://aka.ms/wslusers</span><br><span class=\"line\">Enter new UNIX username: wangkai</span><br><span class=\"line\">New password:</span><br><span class=\"line\">Retype new password:</span><br><span class=\"line\">passwd: password updated successfully</span><br><span class=\"line\">Installation successful!</span><br><span class=\"line\">To run a command as administrator (user &quot;root&quot;), use &quot;sudo &lt;command&gt;&quot;.</span><br><span class=\"line\">See &quot;man sudo_root&quot; for details.</span><br><span class=\"line\"></span><br><span class=\"line\">Welcome to Ubuntu 22.04.2 LTS (GNU/Linux 5.15.90.1-microsoft-standard-WSL2 x86_64)</span><br><span class=\"line\"></span><br><span class=\"line\"> * Documentation:  https://help.ubuntu.com</span><br><span class=\"line\"> * Management:     https://landscape.canonical.com</span><br><span class=\"line\"> * Support:        https://ubuntu.com/advantage</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">This message is shown once a day. To disable it please create the</span><br><span class=\"line\">/home/wangkai/.hushlogin file.</span><br><span class=\"line\">wangkai@Surface-Pro-7:~$</span><br></pre></td></tr></table></figure>\n\n<p>以上安装 ubuntu 的步骤，也可以在应用商店直接搜索安装，也是一样的，相比指令更加直观。</p>\n<h2 id=\"3-安装-docker\"><a href=\"#3-安装-docker\" class=\"headerlink\" title=\"3. 安装 docker\"></a>3. 安装 docker</h2><p>前往 [Docker 官网][1] 下载最新的 Docker Desktop ，下载可能需要注册个免费账号，下载完成后打开安装包，一直下一步即可。</p>\n<p>安装完毕会提示注销一下电脑，根据提示操作即可</p>\n<h2 id=\"4-配置-docker\"><a href=\"#4-配置-docker\" class=\"headerlink\" title=\"4. 配置 docker\"></a>4. 配置 docker</h2><p>打开 docker 后，选择上方的齿轮（即设置）- Docker Engine，在右侧我们需要填写一下 docker 仓库的加速镜像，就是下方代码的 registry-mirrors 这块</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;builder&quot;: &#123;</span><br><span class=\"line\">    &quot;gc&quot;: &#123;</span><br><span class=\"line\">      &quot;defaultKeepStorage&quot;: &quot;20GB&quot;,</span><br><span class=\"line\">      &quot;enabled&quot;: true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;experimental&quot;: false,</span><br><span class=\"line\">  &quot;features&quot;: &#123;</span><br><span class=\"line\">    &quot;buildkit&quot;: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [</span><br><span class=\"line\">    &quot;https://hub-mirror.c.163.com&quot;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>最后点击 Apply &amp; Restart ，进行重启，至此我们的 docker 配置就完事儿了。</p>\n<p>若你能够魔法上网，这一大步你啥也不用配置，官方的就是最好的，镜像会有几率出问题，我遇到很多次了。</p>\n<h1 id=\"5-创建测试项目\"><a href=\"#5-创建测试项目\" class=\"headerlink\" title=\"5. 创建测试项目\"></a>5. 创建测试项目</h1><p>为了解决 linux 子系统与 windows 之间文件传输缓慢的问题，我们的代码直接放在linux中，不要放在 windows 里，我们打开 vs code，安装 remote - WSL 扩展，完成后点击窗口左下角，选择 new WSL window，vs code 会下载必要的数据，完成后，在左侧选择打开文件夹，我默认代码放在 &#x2F;home&#x2F;wangkai 的家目录中，点击确定即可</p>\n<p>在左侧右键新建 code 文件夹，并对其右键，选择在集成终端中打开，在命令行中输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -s https://laravel.build/example-app | bash</span><br></pre></td></tr></table></figure>\n<p>接下来就会自动安装代码到本地</p>\n<h1 id=\"6-部署已有项目（已适配docker）并启动\"><a href=\"#6-部署已有项目（已适配docker）并启动\" class=\"headerlink\" title=\"6. 部署已有项目（已适配docker）并启动\"></a>6. 部署已有项目（已适配docker）并启动</h1><p>更多情况下，我们的工程项目一般不是在 docker 环境跑的，基本都是在 lnmp 的环境下开发和部署（win 环境？异端！烧了！），比如我们经常使用的“本地 homestead 开发 + 线上 lnmp 部署”思路。下面我们就切换我们的开发方式，修改为“本地 docker 开发+线上 docker or lnmp 环境部署”的思路。</p>\n<p>首先我们先在 &#x2F;home&#x2F;wangkai 目录下新建一个名为 code 的目录，我们之后项目代码都放在这。这里我多说一些为啥这样操作，我们把代码放在 linux 中，而非放在 windows 中，目的就是解决了这两个系统数据传输的缓慢问题，这一点在我们使用 homestead 环境的时候尤其明显，用过的都知道，homestead 是吧 virtualbox 的 linux 虚机的一个目录 与 windows 的一个文件夹做了同步，你在任意一个系统中操作的代码都会同步到另一端，这期间就牵扯到跨系统，固然牵扯到跨系统带来的读写缓慢，而这里我们的一切都在 linux 中操作，你的代码、数据库、redis、nginx 都在 Linux<br>中，不与 windows 做交互，速度自然高。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /home/wangkai</span><br><span class=\"line\">mkdir code</span><br></pre></td></tr></table></figure>\n\n<p>然后我们再从远端 git 仓库 clone 下一份全新的代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/code</span><br><span class=\"line\">git clone git@github.com:NightingaleWK/yanjiv2.git yanjiv2</span><br></pre></td></tr></table></figure>\n\n<p>注意，这里我使用的是 ssh-key 的方式拉的代码到本地，你也可以使用 https 的方式，只不过需要每次都输入账号密码，用 ssh-key 的方法是实现了免密，比较方便。关于如何实现 ssh-key 的方式操作 git，请自行百度或者等我佛系更新一下。</p>\n<p>之后我们复制一份 .env 出来，并根据实际修改其中的内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd yanjiv2</span><br><span class=\"line\">cp .env.example .env</span><br><span class=\"line\">vim .env</span><br><span class=\"line\"></span><br><span class=\"line\">然后开始你的修改就行了，修改完毕保存退出 .env，下面是修改的例子</span><br><span class=\"line\"></span><br><span class=\"line\">APP_NAME=yanjiv2</span><br><span class=\"line\">APP_ENV=local</span><br><span class=\"line\">APP_KEY=</span><br><span class=\"line\">APP_DEBUG=true</span><br><span class=\"line\">APP_URL=http://localhost</span><br><span class=\"line\"></span><br><span class=\"line\">LOG_CHANNEL=stack</span><br><span class=\"line\">LOG_DEPRECATIONS_CHANNEL=null</span><br><span class=\"line\">LOG_LEVEL=debug</span><br><span class=\"line\"></span><br><span class=\"line\">DB_CONNECTION=mysql</span><br><span class=\"line\">DB_HOST=mysql</span><br><span class=\"line\">DB_PORT=3306</span><br><span class=\"line\">DB_DATABASE=yanjiv2</span><br><span class=\"line\">DB_USERNAME=sail</span><br><span class=\"line\">DB_PASSWORD=password</span><br><span class=\"line\"></span><br><span class=\"line\">BROADCAST_DRIVER=log</span><br><span class=\"line\">CACHE_DRIVER=file</span><br><span class=\"line\">FILESYSTEM_DRIVER=local</span><br><span class=\"line\">QUEUE_CONNECTION=sync</span><br><span class=\"line\">SESSION_DRIVER=file</span><br><span class=\"line\">SESSION_LIFETIME=120</span><br><span class=\"line\"></span><br><span class=\"line\">MEMCACHED_HOST=127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">REDIS_HOST=127.0.0.1</span><br><span class=\"line\">REDIS_PASSWORD=null</span><br><span class=\"line\">REDIS_PORT=6379</span><br><span class=\"line\"></span><br><span class=\"line\">MAIL_MAILER=smtp</span><br><span class=\"line\">MAIL_HOST=mailhog</span><br><span class=\"line\">MAIL_PORT=1025</span><br><span class=\"line\">MAIL_USERNAME=null</span><br><span class=\"line\">MAIL_PASSWORD=null</span><br><span class=\"line\">MAIL_ENCRYPTION=null</span><br><span class=\"line\">MAIL_FROM_ADDRESS=null</span><br><span class=\"line\">MAIL_FROM_NAME=&quot;$&#123;APP_NAME&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">AWS_ACCESS_KEY_ID=</span><br><span class=\"line\">AWS_SECRET_ACCESS_KEY=</span><br><span class=\"line\">AWS_DEFAULT_REGION=us-east-1</span><br><span class=\"line\">AWS_BUCKET=</span><br><span class=\"line\">AWS_USE_PATH_STYLE_ENDPOINT=false</span><br><span class=\"line\"></span><br><span class=\"line\">PUSHER_APP_ID=</span><br><span class=\"line\">PUSHER_APP_KEY=</span><br><span class=\"line\">PUSHER_APP_SECRET=</span><br><span class=\"line\">PUSHER_APP_CLUSTER=mt1</span><br><span class=\"line\"></span><br><span class=\"line\">MIX_PUSHER_APP_KEY=&quot;$&#123;PUSHER_APP_KEY&#125;&quot;</span><br><span class=\"line\">MIX_PUSHER_APP_CLUSTER=&quot;$&#123;PUSHER_APP_CLUSTER&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 环境是HTTPS环境，则为 true，否则请填写 false</span><br><span class=\"line\">ADMIN_HTTPS=false</span><br><span class=\"line\"></span><br><span class=\"line\"># 环境若为windows，则为 true，否则请填写 false。这里影响维修工单导出时图片的显示</span><br><span class=\"line\">MAINTENANCE_EXPORT_DEV_MODE=false</span><br></pre></td></tr></table></figure>\n\n<p>然后我们在 ubunut 中，跳转到项目根目录，执行如下代码来运行 composer install 指令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --rm \\</span><br><span class=\"line\">    -u &quot;$(id -u):$(id -g)&quot; \\</span><br><span class=\"line\">    -v &quot;$(pwd):/var/www/html&quot; \\</span><br><span class=\"line\">    -w /var/www/html \\</span><br><span class=\"line\">    laravelsail/php82-composer:latest \\</span><br><span class=\"line\">    composer install --ignore-platform-reqs</span><br></pre></td></tr></table></figure>\n<p>这样我们就可以在 ubuntu 没装 composer 的情况下运行composer命令，这个命令使用一个包含 PHP 与 Composer 的小型 Docker 容器进行应用程序依赖的安装。</p>\n<p>当你使用 laravelsail&#x2F;phpXX-composer 镜像时，你应该选择和你的应用程序所用环境相同的 PHP 版本（74、80、81 或 82）</p>\n<p>默认情况下，Sail 命令使用 vendor&#x2F;bin&#x2F;sail 脚本调用，该脚本已包含在所有新建的 laravel 应用程序中：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./vendor/bin/sail up</span><br></pre></td></tr></table></figure>\n\n<p>但与其重复的输入 vendor&#x2F;bin&#x2F;sail 来执行 Sail 命令，你可能会希望配置一个 Shell 别名方便你更容易的执行 Sail 命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias sail=&#x27;[ -f sail ] &amp;&amp; sh sail || sh vendor/bin/sail&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>为了确保这一点始终可用，你可以把它添加到你的主目录下的 shell 配置文件中，如 ~&#x2F;.zshrc 或 ~&#x2F;.bashrc ，然后重新启动你的 shell。</p>\n<p>一旦配置了 shell 别名，你可以通过简单地输入 sail 来执行 Sail 命令。本文接下来的示例都假定你已经配置了此别名：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sail up</span><br></pre></td></tr></table></figure>\n\n<p>具体执行效果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wangkai@PRECISION-7920:~$ cd code/yanjiv2/</span><br><span class=\"line\">wangkai@PRECISION-7920:~/code/yanjiv2$ sail up</span><br><span class=\"line\">[+] Running 65/7</span><br><span class=\"line\"> ✔ redis 6 layers [⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled                                                         25.3s</span><br><span class=\"line\"> ✔ mailpit 2 layers [⣿⣿]      0B/0B      Pulled                                                           44.8s</span><br><span class=\"line\"> ! laravel.test Warning                                                                                    2.5s</span><br><span class=\"line\"> ✔ memcached 5 layers [⣿⣿⣿⣿⣿]      0B/0B      Pulled                                                      52.5s</span><br><span class=\"line\"> ✔ selenium 33 layers [⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled                         146.5s</span><br><span class=\"line\"> ✔ meilisearch 5 layers [⣿⣿⣿⣿⣿]      0B/0B      Pulled                                                    58.0s</span><br><span class=\"line\"> ✔ mysql 7 layers [⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled                                                        60.4s</span><br><span class=\"line\">[+] Building 568.7s (16/16) FINISHED</span><br><span class=\"line\"> =&gt; [internal] load build definition from Dockerfile                                                                                                                                                                                                   0.1s</span><br><span class=\"line\"> =&gt; =&gt; transferring dockerfile: 2.74kB                                                                                                                                                                                                                 0.0s</span><br><span class=\"line\"> =&gt; [internal] load .dockerignore                                                                                                                                                                                                                      0.1s</span><br><span class=\"line\"> =&gt; =&gt; transferring context: 2B                                                                                                                                                                                                                        0.0s</span><br><span class=\"line\"> =&gt; [internal] load metadata for docker.io/library/ubuntu:22.04                                                                                                                                                                                        2.9s</span><br><span class=\"line\"> =&gt; [internal] load build context                                                                                                                                                                                                                      0.0s</span><br><span class=\"line\"> =&gt; =&gt; transferring context: 907B                                                                                                                                                                                                                      0.0s</span><br><span class=\"line\"> =&gt; [ 1/11] FROM docker.io/library/ubuntu:22.04@sha256:9dc05cf19a5745c33b9327dba850480dae80310972dea9b05052162e7c7f2763                                                                                                                                7.1s</span><br><span class=\"line\"> =&gt; =&gt; resolve docker.io/library/ubuntu:22.04@sha256:9dc05cf19a5745c33b9327dba850480dae80310972dea9b05052162e7c7f2763                                                                                                                                  0.0s</span><br><span class=\"line\"> =&gt; =&gt; sha256:9dc05cf19a5745c33b9327dba850480dae80310972dea9b05052162e7c7f2763 1.20kB / 1.20kB                                                                                                                                                         0.0s</span><br><span class=\"line\"> =&gt; =&gt; sha256:965fbcae990b0467ed5657caceaec165018ef44a4d2d46c7cdea80a9dff0d1ea 529B / 529B                                                                                                                                                             0.0s</span><br><span class=\"line\"> =&gt; =&gt; sha256:6b7dfa7e8fdbe18ad425dd965a1049d984f31cf0ad57fa6d5377cca355e65f03 1.46kB / 1.46kB                                                                                                                                                         0.0s</span><br><span class=\"line\"> =&gt; =&gt; sha256:6e3729cf69e0ce2de9e779575a1fec8b7fb5efdfa822829290ab6d5d1bc3e797 30.43MB / 30.43MB                                                                                                                                                       6.2s</span><br><span class=\"line\"> =&gt; =&gt; extracting sha256:6e3729cf69e0ce2de9e779575a1fec8b7fb5efdfa822829290ab6d5d1bc3e797                                                                                                                                                              0.7s</span><br><span class=\"line\"> =&gt; [ 2/11] WORKDIR /var/www/html                                                                                                                                                                                                                      1.5s</span><br><span class=\"line\"> =&gt; [ 3/11] RUN ln -snf /usr/share/zoneinfo/UTC /etc/localtime &amp;&amp; echo UTC &gt; /etc/timezone                                                                                                                                                             0.8s</span><br><span class=\"line\"> =&gt; [ 4/11] RUN apt-get update     &amp;&amp; apt-get install -y gnupg gosu curl ca-certificates zip unzip git supervisor sqlite3 libcap2-bin libpng-dev python2 dnsutils librsvg2-bin     &amp;&amp; curl -sS &#x27;https://keyserver.ubuntu.com/pks/lookup?op=get&amp;sear  542.9s</span><br><span class=\"line\"> =&gt; [ 5/11] RUN setcap &quot;cap_net_bind_service=+ep&quot; /usr/bin/php8.2                                                                                                                                                                                      0.7s</span><br><span class=\"line\"> =&gt; [ 6/11] RUN groupadd --force -g 1000 sail                                                                                                                                                                                                          0.6s</span><br><span class=\"line\"> =&gt; [ 7/11] RUN useradd -ms /bin/bash --no-user-group -g 1000 -u 1337 sail                                                                                                                                                                             0.7s</span><br><span class=\"line\"> =&gt; [ 8/11] COPY start-container /usr/local/bin/start-container                                                                                                                                                                                        0.1s</span><br><span class=\"line\"> =&gt; [ 9/11] COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf                                                                                                                                                                              0.1s</span><br><span class=\"line\"> =&gt; [10/11] COPY php.ini /etc/php/8.2/cli/conf.d/99-sail.ini                                                                                                                                                                                           0.1s</span><br><span class=\"line\"> =&gt; [11/11] RUN chmod +x /usr/local/bin/start-container                                                                                                                                                                                                0.7s</span><br><span class=\"line\"> =&gt; exporting to image                                                                                                                                                                                                                                10.5s</span><br><span class=\"line\"> =&gt; =&gt; exporting layers                                                                                                                                                                                                                               10.5s</span><br><span class=\"line\"> =&gt; =&gt; writing image sha256:ba56461e171b7ca24bba5c554ab4fa9af1dfee46f15e432132b6999b94bd07b4                                                                                                                                                           0.0s</span><br><span class=\"line\"> =&gt; =&gt; naming to sail-8.2/app                                                                                                                                                                                                                          0.0s</span><br><span class=\"line\">[+] Running 11/11</span><br><span class=\"line\"> ✔ Network yanjiv2_sail               Created                                                                                                                                                                                                          0.1s</span><br><span class=\"line\"> ✔ Volume &quot;yanjiv2_sail-meilisearch&quot;  Created                                                                                                                                                                                                          0.0s</span><br><span class=\"line\"> ✔ Volume &quot;yanjiv2_sail-mysql&quot;        Created                                                                                                                                                                                                          0.0s</span><br><span class=\"line\"> ✔ Volume &quot;yanjiv2_sail-redis&quot;        Created                                                                                                                                                                                                          0.0s</span><br><span class=\"line\"> ✔ Container yanjiv2-mysql-1          Created                                                                                                                                                                                                          0.2s</span><br><span class=\"line\"> ✔ Container yanjiv2-selenium-1       Created                                                                                                                                                                                                          0.2s</span><br><span class=\"line\"> ✔ Container yanjiv2-redis-1          Created                                                                                                                                                                                                          0.2s</span><br><span class=\"line\"> ✔ Container yanjiv2-memcached-1      Created                                                                                                                                                                                                          0.2s</span><br><span class=\"line\"> ✔ Container yanjiv2-meilisearch-1    Created                                                                                                                                                                                                          0.2s</span><br><span class=\"line\"> ✔ Container yanjiv2-mailpit-1        Created                                                                                                                                                                                                          0.2s</span><br><span class=\"line\"> ✔ Container yanjiv2-laravel.test-1   Created                                                                                                                                                                                                          0.1s</span><br><span class=\"line\">Attaching to yanjiv2-laravel.test-1, yanjiv2-mailpit-1, yanjiv2-meilisearch-1, yanjiv2-memcached-1, yanjiv2-mysql-1, yanjiv2-redis-1, yanjiv2-selenium-1</span><br><span class=\"line\">yanjiv2-selenium-1      | 2023-05-05 06:47:12,672 INFO Included extra file &quot;/etc/supervisor/conf.d/selenium.conf&quot; during parsing</span><br><span class=\"line\">yanjiv2-selenium-1      | 2023-05-05 06:47:12,676 INFO RPC interface &#x27;supervisor&#x27; initialized</span><br><span class=\"line\">yanjiv2-selenium-1      | 2023-05-05 06:47:12,677 CRIT Server &#x27;unix_http_server&#x27; running without any HTTP authentication checking</span><br><span class=\"line\">yanjiv2-selenium-1      | 2023-05-05 06:47:12,677 INFO supervisord started with pid 8</span><br><span class=\"line\">yanjiv2-redis-1         | 1:C 05 May 2023 06:47:12.892 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span><br><span class=\"line\">yanjiv2-redis-1         | 1:C 05 May 2023 06:47:12.892 # Redis version=7.0.11, bits=64, commit=00000000, modified=0, pid=1, just started</span><br><span class=\"line\">yanjiv2-redis-1         | 1:C 05 May 2023 06:47:12.892 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf</span><br><span class=\"line\">yanjiv2-redis-1         | 1:M 05 May 2023 06:47:12.893 * monotonic clock: POSIX clock_gettime</span><br><span class=\"line\">yanjiv2-redis-1         | 1:M 05 May 2023 06:47:12.893 * Running mode=standalone, port=6379.</span><br><span class=\"line\">yanjiv2-redis-1         | 1:M 05 May 2023 06:47:12.893 # Server initialized</span><br><span class=\"line\">yanjiv2-redis-1         | 1:M 05 May 2023 06:47:12.893 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.</span><br><span class=\"line\">yanjiv2-redis-1         | 1:M 05 May 2023 06:47:12.894 * Ready to accept connections</span><br><span class=\"line\">yanjiv2-mysql-1         | [Entrypoint] MySQL Docker Image 8.0.32-1.2.11-server</span><br><span class=\"line\">yanjiv2-mailpit-1       | INFO[2023/05/05 06:47:13] [smtpd] starting on 0.0.0.0:1025</span><br><span class=\"line\">yanjiv2-mailpit-1       | INFO[2023/05/05 06:47:13] [http] starting server on http://0.0.0.0:8025/</span><br><span class=\"line\">yanjiv2-mysql-1         | [Entrypoint] Initializing database</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:13.388634Z 0 [Warning] [MY-011068] [Server] The syntax &#x27;--skip-host-cache&#x27; is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:13.388730Z 0 [System] [MY-013169] [Server] /usr/sbin/mysqld (mysqld 8.0.32) initializing of server in progress as process 17</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:13.399393Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class=\"line\">yanjiv2-selenium-1      | 2023-05-05 06:47:13,681 INFO spawned: &#x27;xvfb&#x27; with pid 10</span><br><span class=\"line\">yanjiv2-selenium-1      | 2023-05-05 06:47:13,683 INFO spawned: &#x27;vnc&#x27; with pid 11</span><br><span class=\"line\">yanjiv2-selenium-1      | 2023-05-05 06:47:13,686 INFO spawned: &#x27;novnc&#x27; with pid 13</span><br><span class=\"line\">yanjiv2-selenium-1      | 2023-05-05 06:47:13,691 INFO spawned: &#x27;selenium-standalone&#x27; with pid 18</span><br><span class=\"line\">yanjiv2-selenium-1      | Setting up SE_NODE_GRID_URL...</span><br><span class=\"line\">yanjiv2-selenium-1      | 2023-05-05 06:47:13,705 INFO success: xvfb entered RUNNING state, process has stayed up for &gt; than 0 seconds (startsecs)</span><br><span class=\"line\">yanjiv2-selenium-1      | 2023-05-05 06:47:13,705 INFO success: vnc entered RUNNING state, process has stayed up for &gt; than 0 seconds (startsecs)</span><br><span class=\"line\">yanjiv2-selenium-1      | 2023-05-05 06:47:13,705 INFO success: novnc entered RUNNING state, process has stayed up for &gt; than 0 seconds (startsecs)</span><br><span class=\"line\">yanjiv2-selenium-1      | 2023-05-05 06:47:13,705 INFO success: selenium-standalone entered RUNNING state, process has stayed up for &gt; than 0 seconds (startsecs)</span><br><span class=\"line\">yanjiv2-selenium-1      | Selenium Grid Standalone configuration:</span><br><span class=\"line\">yanjiv2-selenium-1      | [network]</span><br><span class=\"line\">yanjiv2-selenium-1      | relax-checks = true</span><br><span class=\"line\">yanjiv2-selenium-1      |</span><br><span class=\"line\">yanjiv2-selenium-1      | [node]</span><br><span class=\"line\">yanjiv2-selenium-1      | session-timeout = &quot;300&quot;</span><br><span class=\"line\">yanjiv2-selenium-1      | override-max-sessions = false</span><br><span class=\"line\">yanjiv2-selenium-1      | detect-drivers = false</span><br><span class=\"line\">yanjiv2-selenium-1      | drain-after-session-count = 0</span><br><span class=\"line\">yanjiv2-selenium-1      | max-sessions = 1</span><br><span class=\"line\">yanjiv2-selenium-1      |</span><br><span class=\"line\">yanjiv2-selenium-1      | [[node.driver-configuration]]</span><br><span class=\"line\">yanjiv2-selenium-1      | display-name = &quot;chrome&quot;</span><br><span class=\"line\">yanjiv2-selenium-1      | stereotype = &#x27;&#123;&quot;browserName&quot;: &quot;chrome&quot;, &quot;browserVersion&quot;: &quot;112.0&quot;, &quot;platformName&quot;: &quot;Linux&quot;&#125;&#x27;</span><br><span class=\"line\">yanjiv2-selenium-1      | max-sessions = 1</span><br><span class=\"line\">yanjiv2-selenium-1      |</span><br><span class=\"line\">yanjiv2-selenium-1      | Starting Selenium Grid Standalone...</span><br><span class=\"line\">yanjiv2-selenium-1      | Tracing is disabled</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:14.006754Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class=\"line\">yanjiv2-selenium-1      | 06:47:14.251 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding</span><br><span class=\"line\">yanjiv2-selenium-1      | 06:47:14.258 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing</span><br><span class=\"line\">yanjiv2-laravel.test-1  | 2023-05-05 06:47:14,290 INFO Set uid to user 0 succeeded</span><br><span class=\"line\">yanjiv2-laravel.test-1  | 2023-05-05 06:47:14,292 INFO supervisord started with pid 1</span><br><span class=\"line\">yanjiv2-selenium-1      | 06:47:15.076 INFO [NodeOptions.getSessionFactories] - Detected 20 available processors</span><br><span class=\"line\">yanjiv2-selenium-1      | 06:47:15.134 INFO [NodeOptions.report] - Adding chrome for &#123;&quot;browserVersion&quot;: &quot;112.0&quot;,&quot;se:noVncPort&quot;: 7900,&quot;browserName&quot;: &quot;chrome&quot;,&quot;platformName&quot;: &quot;LINUX&quot;,&quot;se:vncEnabled&quot;: true&#125; 1 times (Host)</span><br><span class=\"line\">yanjiv2-selenium-1      | 06:47:15.153 INFO [Node.&lt;init&gt;] - Binding additional locator mechanisms: relative</span><br><span class=\"line\">yanjiv2-selenium-1      | 06:47:15.176 INFO [GridModel.setAvailability] - Switching Node 9fac02ef-1d70-409d-8b15-a74e93fb0f25 (uri: http://172.18.0.2:4444) from DOWN to UP</span><br><span class=\"line\">yanjiv2-selenium-1      | 06:47:15.177 INFO [LocalDistributor.add] - Added node 9fac02ef-1d70-409d-8b15-a74e93fb0f25 at http://172.18.0.2:4444. Health check every 120s</span><br><span class=\"line\">yanjiv2-laravel.test-1  | 2023-05-05 06:47:15,295 INFO spawned: &#x27;php&#x27; with pid 16</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   | 888b     d888          d8b 888 d8b                                            888</span><br><span class=\"line\">yanjiv2-meilisearch-1   | 8888b   d8888          Y8P 888 Y8P                                            888</span><br><span class=\"line\">yanjiv2-meilisearch-1   | 88888b.d88888              888                                                888</span><br><span class=\"line\">yanjiv2-meilisearch-1   | 888Y88888P888  .d88b.  888 888 888 .d8888b   .d88b.   8888b.  888d888 .d8888b 88888b.</span><br><span class=\"line\">yanjiv2-meilisearch-1   | 888 Y888P 888 d8P  Y8b 888 888 888 88K      d8P  Y8b     &quot;88b 888P&quot;  d88P&quot;    888 &quot;88b</span><br><span class=\"line\">yanjiv2-meilisearch-1   | 888  Y8P  888 88888888 888 888 888 &quot;Y8888b. 88888888 .d888888 888    888      888  888</span><br><span class=\"line\">yanjiv2-meilisearch-1   | 888   &quot;   888 Y8b.     888 888 888      X88 Y8b.     888  888 888    Y88b.    888  888</span><br><span class=\"line\">yanjiv2-meilisearch-1   | 888       888  &quot;Y8888  888 888 888  88888P&#x27;  &quot;Y8888  &quot;Y888888 888     &quot;Y8888P 888  888</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Config file path:     &quot;none&quot;</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Database path:                &quot;./data.ms&quot;</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Server listening on:  &quot;http://0.0.0.0:7700&quot;</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Environment:          &quot;development&quot;</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Commit SHA:           &quot;4b953d62fbab81278324e71b4037eb06355dd49a&quot;</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Commit date:          &quot;2023-04-13T16:24:16+00:00&quot;</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Package version:      &quot;1.1.1&quot;</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Thank you for using Meilisearch!</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   | We collect anonymized analytics to improve our product and your experience. To learn more, including how to turn off analytics, visit our dedicated documentation page: https://docs.meilisearch.com/learn/what_is_meilisearch/telemetry.html</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Anonymous telemetry:  &quot;Enabled&quot;</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Instance UID:         &quot;073aa49c-374d-4af8-bb0c-5e0b8ef95b38&quot;</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   |  No master key was found. The server will accept unidentified requests.</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   |  A master key of at least 16 bytes will be required when switching to a production environment.</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   | We generated a new secure master key for you (you can safely use this token):</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   | &gt;&gt; --master-key XVIX1t9QZsTQN6nz7uSS8Y71qPUIdohggUxIWeCR8gg &lt;&lt;</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Restart Meilisearch with the argument above to use this new and secure master key.</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Documentation:                https://docs.meilisearch.com</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Source code:          https://github.com/meilisearch/meilisearch</span><br><span class=\"line\">yanjiv2-meilisearch-1   | Contact:              https://docs.meilisearch.com/resources/contact.html</span><br><span class=\"line\">yanjiv2-meilisearch-1   |</span><br><span class=\"line\">yanjiv2-meilisearch-1   | [2023-05-05T06:47:15Z INFO  actix_server::builder] Starting 10 workers</span><br><span class=\"line\">yanjiv2-meilisearch-1   | [2023-05-05T06:47:15Z INFO  actix_server::server] Actix runtime found; starting in Actix runtime</span><br><span class=\"line\">yanjiv2-selenium-1      | 06:47:15.381 INFO [Standalone.execute] - Started Selenium Standalone 4.9.0 (revision d7057100a6): http://172.18.0.2:4444</span><br><span class=\"line\">yanjiv2-laravel.test-1  | Starting laravel development server: http://0.0.0.0:80</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:15 2023] PHP 8.2.5 Development Server (http://0.0.0.0:80) started</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:16.298633Z 6 [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.</span><br><span class=\"line\">yanjiv2-laravel.test-1  | 2023-05-05 06:47:17,205 INFO success: php entered RUNNING state, process has stayed up for &gt; than 1 seconds (startsecs)</span><br><span class=\"line\">yanjiv2-mysql-1         | [Entrypoint] Database initialized</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:21.867567Z 0 [Warning] [MY-011068] [Server] The syntax &#x27;--skip-host-cache&#x27; is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:21.869445Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.32) starting as process 60</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:21.903451Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:22.074419Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:22.447280Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:22.447388Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:22.494594Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Socket: /var/run/mysqld/mysqlx.sock</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:22.494863Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: &#x27;8.0.32&#x27;  socket: &#x27;/var/lib/mysql/mysql.sock&#x27;  port: 0  MySQL Community Server - GPL.</span><br><span class=\"line\">yanjiv2-mysql-1         | Warning: Unable to load &#x27;/usr/share/zoneinfo/iso3166.tab&#x27; as time zone. Skipping it.</span><br><span class=\"line\">yanjiv2-mysql-1         | Warning: Unable to load &#x27;/usr/share/zoneinfo/leapseconds&#x27; as time zone. Skipping it.</span><br><span class=\"line\">yanjiv2-mysql-1         | Warning: Unable to load &#x27;/usr/share/zoneinfo/tzdata.zi&#x27; as time zone. Skipping it.</span><br><span class=\"line\">yanjiv2-mysql-1         | Warning: Unable to load &#x27;/usr/share/zoneinfo/zone.tab&#x27; as time zone. Skipping it.</span><br><span class=\"line\">yanjiv2-mysql-1         | Warning: Unable to load &#x27;/usr/share/zoneinfo/zone1970.tab&#x27; as time zone. Skipping it.</span><br><span class=\"line\">yanjiv2-mysql-1         |</span><br><span class=\"line\">yanjiv2-mysql-1         | [Entrypoint] running /docker-entrypoint-initdb.d/10-create-testing-database.sh</span><br><span class=\"line\">yanjiv2-mysql-1         | mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class=\"line\">yanjiv2-mysql-1         |</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:25.076164Z 15 [System] [MY-013172] [Server] Received SHUTDOWN from user root. Shutting down mysqld (Version: 8.0.32).</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:26.390283Z 0 [System] [MY-010910] [Server] /usr/sbin/mysqld: Shutdown complete (mysqld 8.0.32)  MySQL Community Server - GPL.</span><br><span class=\"line\">yanjiv2-mysql-1         | [Entrypoint] Server shut down</span><br><span class=\"line\">yanjiv2-mysql-1         |</span><br><span class=\"line\">yanjiv2-mysql-1         | [Entrypoint] MySQL init process done. Ready for start up.</span><br><span class=\"line\">yanjiv2-mysql-1         |</span><br><span class=\"line\">yanjiv2-mysql-1         | [Entrypoint] Starting MySQL 8.0.32-1.2.11-server</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:27.300132Z 0 [Warning] [MY-011068] [Server] The syntax &#x27;--skip-host-cache&#x27; is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:27.301672Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.32) starting as process 1</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:27.316952Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:27.452872Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:27.736549Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:27.736619Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:27.770036Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: &#x27;::&#x27; port: 33060, socket: /var/run/mysqld/mysqlx.sock</span><br><span class=\"line\">yanjiv2-mysql-1         | 2023-05-05T06:47:27.770200Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: &#x27;8.0.32&#x27;  socket: &#x27;/var/lib/mysql/mysql.sock&#x27;  port: 3306  MySQL Community Server - GPL.</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:35 2023] 172.18.0.1:44704 Accepted</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:35 2023] 172.18.0.1:44704 Closing</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:35 2023] 172.18.0.1:44708 Accepted</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:35 2023] 172.18.0.1:44708 Closing</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:35 2023] 172.18.0.1:44716 Accepted</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:35 2023] 172.18.0.1:44716 Closing</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:35 2023] 172.18.0.1:44730 Accepted</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:35 2023] 172.18.0.1:44730 Closing</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:36 2023] 172.18.0.1:44744 Accepted</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:36 2023] 172.18.0.1:44744 Closing</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:36 2023] 172.18.0.1:44750 Accepted</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:36 2023] 172.18.0.1:44750 [200]: GET /favicon.ico</span><br><span class=\"line\">yanjiv2-laravel.test-1  | [Fri May  5 06:47:36 2023] 172.18.0.1:44750 Closing</span><br><span class=\"line\">yanjiv2-meilisearch-1   | [2023-05-05T06:47:43Z INFO  actix_web::middleware::logger] 127.0.0.1 &quot;GET /health HTTP/1.1&quot; 200 22 &quot;-&quot; &quot;Wget&quot; 0.000301</span><br></pre></td></tr></table></figure>\n\n<p>如果没出意外的话，现在服务应该起来了，访问一下 localhost 就可以看到熟悉的 laravel 欢迎界面了。</p>\n<p>若提示“No application encryption key has been specified.”，点击报错页面的“Generate app key”，然后刷新一下就好了</p>\n<p>之后就和正常继续部署项目一样，但是记得把每行指令的 php artisan 改为 sail artisan，比如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php artisan migrate:refresh --seed</span><br><span class=\"line\">// to</span><br><span class=\"line\">sail artisan migrate:refresh --seed</span><br><span class=\"line\"></span><br><span class=\"line\">composer i</span><br><span class=\"line\">// to</span><br><span class=\"line\">sail composer i</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"7-部署已有项目（未适配-docker）并启动\"><a href=\"#7-部署已有项目（未适配-docker）并启动\" class=\"headerlink\" title=\"7. 部署已有项目（未适配 docker）并启动\"></a>7. 部署已有项目（未适配 docker）并启动</h1><p>更多情况下，我们的工程项目一般不是在 docker 环境跑的，基本都是在 lnmp 的环境下开发和部署（win 环境？异端！烧了！），比如我们经常使用的“本地 homestead 开发 + 线上 lnmp 部署”思路。下面我们就切换我们的开发方式，修改为“本地 docker 开发+线上 docker or lnmp 环境部署”的思路。</p>\n<p>首先我们先在 &#x2F;home&#x2F;wangkai 目录下新建一个名为 code 的目录，我们之后项目代码都放在这。这里我多说一些为啥这样操作，我们把代码放在 linux 中，而非放在 windows 中，目的就是解决了这两个系统数据传输的缓慢问题，这一点在我们使用 homestead 环境的时候尤其明显，用过的都知道，homestead 是吧 virtualbox 的 linux 虚机的一个目录 与 windows 的一个文件夹做了同步，你在任意一个系统中操作的代码都会同步到另一端，这期间就牵扯到跨系统，固然牵扯到跨系统带来的读写缓慢，而这里我们的一切都在 linux 中操作，你的代码、数据库、redis、nginx 都在 Linux<br>中，不与 windows 做交互，速度自然高。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /home/wangkai</span><br><span class=\"line\">mkdir code</span><br></pre></td></tr></table></figure>\n\n<p>然后我们再从远端 git 仓库 clone 下一份全新的代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/code</span><br><span class=\"line\">git clone git@github.com:NightingaleWK/yanjiv2.git yanjiv2</span><br></pre></td></tr></table></figure>\n\n<p>注意，这里我使用的是 ssh-key 的方式拉的代码到本地，你也可以使用 https 的方式，只不过需要每次都输入账号密码，用 ssh-key 的方法是实现了免密，比较方便。关于如何实现 ssh-key 的方式操作 git，请自行百度或者等我佛系更新一下。</p>\n<p>之后我们复制一份 .env 出来，并根据实际修改其中的内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd yanjiv2</span><br><span class=\"line\">cp .env.example .env</span><br><span class=\"line\">vim .env</span><br><span class=\"line\"></span><br><span class=\"line\">然后开始你的修改就行了，修改完毕保存退出 .env，下面是修改的例子</span><br><span class=\"line\"></span><br><span class=\"line\">APP_NAME=yanjiv2</span><br><span class=\"line\">APP_ENV=local</span><br><span class=\"line\">APP_KEY=</span><br><span class=\"line\">APP_DEBUG=true</span><br><span class=\"line\">APP_URL=http://localhost</span><br><span class=\"line\"></span><br><span class=\"line\">LOG_CHANNEL=stack</span><br><span class=\"line\">LOG_DEPRECATIONS_CHANNEL=null</span><br><span class=\"line\">LOG_LEVEL=debug</span><br><span class=\"line\"></span><br><span class=\"line\">DB_CONNECTION=mysql</span><br><span class=\"line\">DB_HOST=127.0.0.1</span><br><span class=\"line\">DB_PORT=3306</span><br><span class=\"line\">DB_DATABASE=yanjiv2</span><br><span class=\"line\">DB_USERNAME=yanjiv2</span><br><span class=\"line\">DB_PASSWORD=yanjiv2</span><br><span class=\"line\"></span><br><span class=\"line\">BROADCAST_DRIVER=log</span><br><span class=\"line\">CACHE_DRIVER=file</span><br><span class=\"line\">FILESYSTEM_DRIVER=local</span><br><span class=\"line\">QUEUE_CONNECTION=sync</span><br><span class=\"line\">SESSION_DRIVER=file</span><br><span class=\"line\">SESSION_LIFETIME=120</span><br><span class=\"line\"></span><br><span class=\"line\">MEMCACHED_HOST=127.0.0.1</span><br><span class=\"line\"></span><br><span class=\"line\">REDIS_HOST=127.0.0.1</span><br><span class=\"line\">REDIS_PASSWORD=null</span><br><span class=\"line\">REDIS_PORT=6379</span><br><span class=\"line\"></span><br><span class=\"line\">MAIL_MAILER=smtp</span><br><span class=\"line\">MAIL_HOST=mailhog</span><br><span class=\"line\">MAIL_PORT=1025</span><br><span class=\"line\">MAIL_USERNAME=null</span><br><span class=\"line\">MAIL_PASSWORD=null</span><br><span class=\"line\">MAIL_ENCRYPTION=null</span><br><span class=\"line\">MAIL_FROM_ADDRESS=null</span><br><span class=\"line\">MAIL_FROM_NAME=&quot;$&#123;APP_NAME&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">AWS_ACCESS_KEY_ID=</span><br><span class=\"line\">AWS_SECRET_ACCESS_KEY=</span><br><span class=\"line\">AWS_DEFAULT_REGION=us-east-1</span><br><span class=\"line\">AWS_BUCKET=</span><br><span class=\"line\">AWS_USE_PATH_STYLE_ENDPOINT=false</span><br><span class=\"line\"></span><br><span class=\"line\">PUSHER_APP_ID=</span><br><span class=\"line\">PUSHER_APP_KEY=</span><br><span class=\"line\">PUSHER_APP_SECRET=</span><br><span class=\"line\">PUSHER_APP_CLUSTER=mt1</span><br><span class=\"line\"></span><br><span class=\"line\">MIX_PUSHER_APP_KEY=&quot;$&#123;PUSHER_APP_KEY&#125;&quot;</span><br><span class=\"line\">MIX_PUSHER_APP_CLUSTER=&quot;$&#123;PUSHER_APP_CLUSTER&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 环境是HTTPS环境，则为 true，否则请填写 false</span><br><span class=\"line\">ADMIN_HTTPS=false</span><br><span class=\"line\"></span><br><span class=\"line\"># 环境若为windows，则为 true，否则请填写 false。这里影响维修工单导出时图片的显示</span><br><span class=\"line\">MAINTENANCE_EXPORT_DEV_MODE=false</span><br></pre></td></tr></table></figure>\n\n<p>本小节未完待续…<br>  [1]: <a href=\"https://www.docker.com/\">https://www.docker.com/</a></p>\n",
            "tags": [
                "laravel sail"
            ]
        }
    ]
}